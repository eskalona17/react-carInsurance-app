{"version":3,"sources":["components/Header.js","helpers.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primeraMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","ObtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4c18f5a.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport PropTypes from 'prop-types';\n\nconst ContenedorHeader = styled.header`\n  background-color: #26c6da;\n  padding: 10px;\n  font-weight: bold;\n  color: #ffffff;\n`;\n\nconst TextoHeader = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  font-family: \"Slabo 27px\", serif;\n  text-align: center;\n`;\n\nconst Header = ({ titulo }) => {\n  return (\n    <ContenedorHeader>\n      <TextoHeader>{titulo}</TextoHeader>\n    </ContenedorHeader>\n  );\n};\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired\n};\n\nexport default Header;\n","// obtiene la diferencia de años\nexport function obtenerDiferenciaYear(year) {\n  return new Date().getFullYear() - year;\n}\n\n//calcular el total a pagar segun la marca\nexport function calcularMarca(marca) {\n  let incremento;\n  switch (marca) {\n    case \"europeo\":\n      incremento = 1.3;\n      break;\n    case \"americano\":\n      incremento = 1.15;\n      break;\n    case \"asiatico\":\n      incremento = 1.05;\n      break;\n    default:\n      break;\n  }\n  return incremento;\n}\n\n//calcula el tipo de seguro\nexport function obtenerPlan(plan){\n  return(plan === 'basico') ? 1.20: 1.50;\n}\n\n//muestra la primera letra en mayuscula\nexport function primeraMayuscula(texto){\n  return texto.charAt(0).toUpperCase() + texto.slice(1);\n}\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport PropTYpes from \"prop-types\";\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from \"../helpers\";\n\nconst Campo = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n  display: block;\n  width: 100%;\n  padding: 1rem;\n  border: 1px solid #e1e1e1;\n  -webkit-appearance: none;\n`;\n\nconst InputRadio = styled.input`\n  margin: 0 1rem;\n`;\n\nconst Boton = styled.button`\n  background-color: #00838f;\n  font-size: 16px;\n  width: 100%;\n  padding: 1rem;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  border: none;\n  transition: background-color 0.3s ease;\n  margin-top: 2rem;\n\n  &:hover {\n    background-color: #26c6da;\n    cursor: pointer;\n  }\n`;\n\nconst Error = styled.div`\n  background-color: red;\n  color: white;\n  padding: 1rem;\n  width: 100%;\n  text-align: center;\n  margin-bottom: 2rem;\n`;\n\nconst Formulario = ({ guardarResumen, guardarCargando }) => {\n  const [datos, guardarDatos] = useState({\n    marca: \"\",\n    year: \"\",\n    plan: \"\",\n  });\n\n  const [error, guardarError] = useState(false);\n\n  //extraemos los valores del state\n  const { marca, year, plan } = datos;\n\n  //leemos los datos del formulario y los colocamos en el state\n  const ObtenerInformacion = (e) => {\n    guardarDatos({\n      ...datos,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //cuando el usuario presiona submit\n  const cotizarSeguro = (e) => {\n    e.preventDefault();\n\n    if (marca.trim() === \"\" || year.trim() === \"\" || plan.trim() === \"\") {\n      guardarError(true);\n      return;\n    }\n\n    guardarError(false);\n\n    //una base de 2000\n    let resultado = 2000;\n\n    //obtener la diferencia de años\n    const diferencia = obtenerDiferenciaYear(year);\n\n    //por cada año hay que restar el 3% del valor\n    resultado -= (diferencia * 3 * resultado) / 100;\n\n    //americano 15\n    //asiatico 5\n    //europeo 30\n    resultado = calcularMarca(marca) * resultado;\n\n    //basico aumenta 20%\n\n    //completo 50%\n    const incrementoPlan = obtenerPlan(plan);\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n\n    guardarCargando(true);\n\n    setTimeout(() => {\n      //elimina el spinner\n      guardarCargando(false);\n\n      //pasa la informacion al componente principal\n      guardarResumen({\n        cotizacion: Number(resultado),\n        datos,\n      });\n    }, 3000);\n\n    //total\n  };\n\n  return (\n    <form onSubmit={cotizarSeguro}>\n      {error ? <Error>Todos los campos son obligatorios</Error> : null}\n      <Campo>\n        <Label>Marca</Label>\n        <Select name=\"marca\" value={marca} onChange={ObtenerInformacion}>\n          <option value=\"\">-- Seleccione --</option>\n          <option value=\"americano\">Americano</option>\n          <option value=\"europeo\">Europeo</option>\n          <option value=\"asiatico\">Asiatico</option>\n        </Select>\n      </Campo>\n      <Campo>\n        <Label>Año</Label>\n        <Select name=\"year\" value={year} onChange={ObtenerInformacion}>\n          <option value=\"\">-- Seleccione --</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2018\">2018</option>\n          <option value=\"2017\">2017</option>\n          <option value=\"2016\">2016</option>\n          <option value=\"2015\">2015</option>\n          <option value=\"2014\">2014</option>\n          <option value=\"2013\">2013</option>\n          <option value=\"2012\">2012</option>\n        </Select>\n      </Campo>\n      <Campo>\n        <Label>Plan</Label>\n        <InputRadio\n          type=\"radio\"\n          name=\"plan\"\n          value=\"basico\"\n          checked={plan === \"basico\"}\n          onChange={ObtenerInformacion}\n        />{\" \"}\n        Básico\n        <InputRadio\n          type=\"radio\"\n          name=\"plan\"\n          value=\"completo\"\n          checked={plan === \"completo\"}\n          onChange={ObtenerInformacion}\n        />{\" \"}\n        Completo\n      </Campo>\n      <Boton type=\"submit\">Cotizar</Boton>\n    </form>\n  );\n};\n\nFormulario.propTypes = {\n  guardarResumen: PropTYpes.func.isRequired,\n  guardarCargando: PropTYpes.func.isRequired,\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport PropTypes from 'prop-types';\nimport {primeraMayuscula} from '../helpers'\n\nconst ContenedorResumen = styled.div`\n  padding: 1rem;\n  text-align: center;\n  background-color: #00838f;\n  color: #fff;\n  margin-top: 1rem;\n`;\n\nconst Resumen = ({ datos }) => {\n  //extraer de datos\n  const { marca, year, plan } = datos;\n  if (marca === \"\" || year === \"\" || plan === \"\") {\n    return null;\n  }\n  return (\n    <ContenedorResumen>\n      <h2>Resumen de cotizacion</h2>\n      <ul>\n        <li>Marca: {primeraMayuscula(marca)}</li>\n        <li>Plan: {primeraMayuscula(plan)}</li>\n        <li>Año del auto: {year}</li>\n      </ul>\n    </ContenedorResumen>\n  );\n};\n\nResumen.propTypes = {\n  datos: PropTypes.object.isRequired\n}\n\nexport default Resumen;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst Mensaje = styled.p`\n  background-color: rgb(127, 224, 237);\n  margin-top: 2rem;\n  padding: 1rem;\n  text-align: center;\n`;\n\nconst ResultadoCotizacion = styled.div`\n  text-align: center;\n  padding: 0.5rem;\n  border: 1px solid #26c6da;\n  background-color: rgb(127, 224, 237);\n  margin-top: 1rem;\n  position: relative;\n`;\n\nconst TextoCotizacion = styled.p`\n  color: #00838f;\n  padding: 1rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  margin: 0;\n`;\n\nconst Resultado = ({ cotizacion }) => {\n  return cotizacion === 0 ? (\n    <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\n  ) : (\n    <ResultadoCotizacion>\n      <TransitionGroup component=\"span\" className=\"resultado\">\n        <CSSTransition\n          classNames=\"resultado\"\n          key={cotizacion}\n          timeout={{ enter: 500, exit: 500 }}\n        >\n          <TextoCotizacion>El total es: <span>{cotizacion}</span>€</TextoCotizacion>\n        </CSSTransition>\n      </TransitionGroup>\n    </ResultadoCotizacion>\n  );\n};\n\nResultado.propTypes = {\n  cotizacion: PropTypes.number.isRequired\n}\n\nexport default Resultado;\n","import React from 'react';\nimport './Spinner.css'\n\nconst Spinner = () => {\n    return ( <div className=\"sk-circle\">\n    <div className=\"sk-circle1 sk-child\"></div>\n    <div className=\"sk-circle2 sk-child\"></div>\n    <div className=\"sk-circle3 sk-child\"></div>\n    <div className=\"sk-circle4 sk-child\"></div>\n    <div className=\"sk-circle5 sk-child\"></div>\n    <div className=\"sk-circle6 sk-child\"></div>\n    <div className=\"sk-circle7 sk-child\"></div>\n    <div className=\"sk-circle8 sk-child\"></div>\n    <div className=\"sk-circle9 sk-child\"></div>\n    <div className=\"sk-circle10 sk-child\"></div>\n    <div className=\"sk-circle11 sk-child\"></div>\n    <div className=\"sk-circle12 sk-child\"></div>\n  </div> );\n}\n \nexport default Spinner;","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport Spinner from \"./components/Spinner\";\n\nimport styled from \"@emotion/styled\";\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\nconst ContenedorFormulario = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: \"\",\n      year: \"\",\n      plan: \"\",\n    },\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  //extraer datos\n  const { datos, cotizacion } = resumen;\n\n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de seguros\" />\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n        {cargando ? <Spinner /> : null}\n\n        <Resumen datos={datos} />\n\n        {!cargando ? <Resultado cotizacion={cotizacion} /> : null}\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}